/////////////////////////////////////////////////////////////////////////////
// Name:        view_ch_control.h
// Purpose:     
// Author:      NDA
// Modified by: 
// Created:     06/04/2006 10:37:55
// RCS-ID:      
// Copyright:   CAEN S.p.A All rights reserved.
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 06/04/2006 10:37:55

#ifndef _VIEW_CH_CONTROL_H_
#define _VIEW_CH_CONTROL_H_

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma interface "view_ch_control.h"
#endif

/*!
 * Includes
 */

////@begin includes
#include "wx/tglbtn.h"
#include "wx/spinbutt.h"
#include "wx/spinctrl.h"
////@end includes

#include "generic_board.h"

/*!
 * Forward declarations
 */

////@begin forward declarations
class wxToggleButton;
class wxSpinButton;
class wxSpinCtrl;
////@end forward declarations

/*!
 * Control identifiers
 */

////@begin control identifiers
#define ID_DIALOG 10027
#define SYMBOL_VIEWCHCONTROL_STYLE 0
#define SYMBOL_VIEWCHCONTROL_TITLE _("ViewChControl")
#define SYMBOL_VIEWCHCONTROL_IDNAME ID_DIALOG
#define SYMBOL_VIEWCHCONTROL_SIZE wxSize(400, 300)
#define SYMBOL_VIEWCHCONTROL_POSITION wxDefaultPosition
#define ID_VIEW_ENABLE_TOGGLEBUTTON 10002
#define ID_VIEW_VOLT_PER_DIV_COMBOBOX 10000
#define ID_OFFSET_Y_RESET_BUTTON 10035
#define ID_SPINBUTTON1 10034
#define ID_COLOR_PANEL 10029
#define ID_CHOOSE_COLOR_BUTTON 10028
#define ID_LINE_WIDTH_SPINCTRL 10031
////@end control identifiers

/*!
 * Compatibility
 */

#ifndef wxCLOSE_BOX
#define wxCLOSE_BOX 0x1000
#endif

/*!
 * ViewChControl class declaration
 */

class ViewChControl: public wxPanel
{    
    DECLARE_DYNAMIC_CLASS( ViewChControl )
    DECLARE_EVENT_TABLE()

public:
    /// Constructors
    ViewChControl( );
    ViewChControl( wxWindow* parent, wxWindowID id = SYMBOL_VIEWCHCONTROL_IDNAME, const wxPoint& pos = SYMBOL_VIEWCHCONTROL_POSITION, const wxSize& size = SYMBOL_VIEWCHCONTROL_SIZE, long style = SYMBOL_VIEWCHCONTROL_STYLE );

    /// Creation
    bool Create( wxWindow* parent, wxWindowID id = SYMBOL_VIEWCHCONTROL_IDNAME, const wxPoint& pos = SYMBOL_VIEWCHCONTROL_POSITION, const wxSize& size = SYMBOL_VIEWCHCONTROL_SIZE, long style = SYMBOL_VIEWCHCONTROL_STYLE );

    /// Creates the controls and sizers
    void CreateControls();

////@begin ViewChControl event handler declarations

    /// wxEVT_COMMAND_CHECKBOX_CLICKED event handler for ID_VIEW_ENABLE_TOGGLEBUTTON
    void OnViewEnableTogglebuttonClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_TEXT_UPDATED event handler for ID_VIEW_VOLT_PER_DIV_COMBOBOX
    void OnViewVoltPerDivComboboxUpdated( wxCommandEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_OFFSET_Y_RESET_BUTTON
    void OnOffsetYResetButtonClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_SPINCTRL_UPDATED event handler for ID_SPINBUTTON1
    void OnSpinbutton1Updated( wxSpinEvent& event );

    /// wxEVT_COMMAND_BUTTON_CLICKED event handler for ID_CHOOSE_COLOR_BUTTON
    void OnChooseColorButtonClick( wxCommandEvent& event );

    /// wxEVT_COMMAND_SPINCTRL_UPDATED event handler for ID_LINE_WIDTH_SPINCTRL
    void OnLineWidthSpinctrlUpdated( wxSpinEvent& event );

////@end ViewChControl event handler declarations
    void OnLineWidthSpinctrlTextUpdated( wxCommandEvent& event );
    void OnVoltPerDivSpinctrlTextUpdated( wxCommandEvent& event );

////@begin ViewChControl member function declarations

    /// Retrieves bitmap resources
    wxBitmap GetBitmapResource( const wxString& name );

    /// Retrieves icon resources
    wxIcon GetIconResource( const wxString& name );
////@end ViewChControl member function declarations

    /// Should we show tooltips?
    static bool ShowToolTips();

////@begin ViewChControl member variables
    wxStaticBox* m_main_sizer_text;
    wxToggleButton* m_view_enable_control;
    wxComboBox* m_ch_volt_per_div_comboBox;
    wxButton* m_ch_offset_reset_control;
    wxSpinButton* m_ch_offset_control;
    wxPanel* m_color_control;
    wxSpinCtrl* m_line_width_control;
////@end ViewChControl member variables

	bool SetupBoard( GenericBoard* p_board, int ch_index, int ch_count, int m_scope_index, bool is_virtual);
	bool UpdateControls( );
private: 
	// Generic Board pointer
	GenericBoard* m_p_board;
	GenericBoardChannel* m_p_board_channel;
	int m_ch_index;
	int m_ch_count;
	int m_scope_index;
	bool m_is_virtual;
protected:
	void UpdateLinePen( void);
	void UpdateLineWidth( int value);
	void UpdateOffset( void);
	void UpdateVoltPerDiv( int value);
};

#endif
    // _VIEW_CH_CONTROL_H_
