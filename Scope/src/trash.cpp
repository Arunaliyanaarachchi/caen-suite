/////////////////////////////////////////////////////////////////////////////
// Name:        trash.cpp
// Purpose:     
// Author:      NDA
// Modified by: 
// Created:     23/10/2010 19:13:48
// RCS-ID:      
// Copyright:   CAEN S.p.A All rights reserved.
// Licence:     
/////////////////////////////////////////////////////////////////////////////

// Generated by DialogBlocks (unregistered), 23/10/2010 19:13:48

#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
#pragma implementation "trash.h"
#endif

// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes

#include "trash.h"

////@begin XPM images
////@end XPM images

/*!
 * Trash type definition
 */

IMPLEMENT_DYNAMIC_CLASS( Trash, wxDialog )

/*!
 * Trash event table definition
 */

BEGIN_EVENT_TABLE( Trash, wxDialog )

////@begin Trash event table entries
////@end Trash event table entries

END_EVENT_TABLE()

/*!
 * Trash constructors
 */

Trash::Trash( )
{
}

Trash::Trash( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
    Create(parent, id, caption, pos, size, style);
}

/*!
 * Trash creator
 */

bool Trash::Create( wxWindow* parent, wxWindowID id, const wxString& caption, const wxPoint& pos, const wxSize& size, long style )
{
////@begin Trash member initialisation
    m_grid_line_type_control = NULL;
////@end Trash member initialisation

////@begin Trash creation
    SetExtraStyle(GetExtraStyle()|wxWS_EX_BLOCK_EVENTS);
    wxDialog::Create( parent, id, caption, pos, size, style );

    CreateControls();
    if (GetSizer())
    {
        GetSizer()->SetSizeHints(this);
    }
    Centre();
////@end Trash creation
    return true;
}

/*!
 * Control creation for Trash
 */

void Trash::CreateControls()
{    
////@begin Trash content construction
    // Generated by DialogBlocks, 30/11/2010 11:03:31 (unregistered)

    Trash* itemDialog1 = this;

    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
    itemDialog1->SetSizer(itemBoxSizer2);

    ViewChControl* itemViewChControl3 = new ViewChControl( itemDialog1, ID_PANEL, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
    itemBoxSizer2->Add(itemViewChControl3, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxString* m_grid_line_type_controlStrings = NULL;
    m_grid_line_type_control = new wxChoice( itemDialog1, ID_GRID_LINE_TYPE_CHOICE, wxDefaultPosition, wxDefaultSize, 0, m_grid_line_type_controlStrings, 0 );
    itemBoxSizer2->Add(m_grid_line_type_control, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    itemBoxSizer2->Add(5, 5, 1, wxGROW|wxALL, 5);

    wxBoxSizer* itemBoxSizer6 = new wxBoxSizer(wxVERTICAL);
    itemBoxSizer2->Add(itemBoxSizer6, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxGridSizer* itemGridSizer7 = new wxGridSizer(3, 3, 0, 0);
    itemBoxSizer2->Add(itemGridSizer7, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

    wxCheckBox* itemCheckBox8 = new wxCheckBox( itemDialog1, ID_CHECKBOX1, _("Checkbox"), wxDefaultPosition, wxDefaultSize, 0 );
    itemCheckBox8->SetValue(false);
    itemGridSizer7->Add(itemCheckBox8, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxBitmap itemStaticBitmap9Bitmap(wxNullBitmap);
    wxStaticBitmap* itemStaticBitmap9 = new wxStaticBitmap( itemDialog1, wxID_STATIC, itemStaticBitmap9Bitmap, wxDefaultPosition, wxDefaultSize, 0 );
    itemGridSizer7->Add(itemStaticBitmap9, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxALL, 5);

    wxString* itemCheckListBox10Strings = NULL;
    wxCheckListBox* itemCheckListBox10 = new wxCheckListBox( itemDialog1, ID_CHECKLISTBOX1, wxDefaultPosition, wxDefaultSize, 0, itemCheckListBox10Strings, wxLB_MULTIPLE );
    itemBoxSizer2->Add(itemCheckListBox10, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);

////@end Trash content construction
}

/*!
 * Should we show tooltips?
 */

bool Trash::ShowToolTips()
{
    return true;
}

/*!
 * Get bitmap resources
 */

wxBitmap Trash::GetBitmapResource( const wxString& name )
{
    // Bitmap retrieval
////@begin Trash bitmap retrieval
    wxUnusedVar(name);
    return wxNullBitmap;
////@end Trash bitmap retrieval
}

/*!
 * Get icon resources
 */

wxIcon Trash::GetIconResource( const wxString& name )
{
    // Icon retrieval
////@begin Trash icon retrieval
    wxUnusedVar(name);
    return wxNullIcon;
////@end Trash icon retrieval
}
